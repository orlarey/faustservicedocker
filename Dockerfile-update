
########################################################################
########################################################################
#
#       Faustservice (remote Faust compiler) in a docker
#                 (L. Champenois & Y. Orlarey)
#
########################################################################
########################################################################

FROM eu.gcr.io/faust-cloud-208407/faustservicecloud:version20230605

########################################################################
# Now we can clone and compile all the Faust related git repositories
########################################################################

WORKDIR /faust
RUN git fetch && git checkout 10293f20ae0904257b3ce2ca31346e5f7082d9b0
RUN echo "Revert to old faus2puredata because Apple M1 target not available with our osxcross"
RUN git checkout 1834bd41888ee518946d8e0ed661aad9ac88843d tools/faust2appls/faust2puredata 
RUN make &&  make install

# copy precompiled android libraries needed for OSC support (-osc option)
#COPY libs /usr/local/share/faust/osclib/android/libs

########################################################################
# Tune image by forcing Gradle upgrade
########################################################################
#ENV GRADLE_USER_HOME=/tmp/gradle

RUN echo "process=+;" > tmp.dsp; 
RUN faust2android tmp.dsp; 
RUN faust2smartkeyb -android tmp.dsp; 
RUN rm tmp.apk

########################################################################
# Reinstall and starts Faustservice (a commit from server branch)
########################################################################

WORKDIR /faustservice
RUN git fetch && git checkout e80458c295f15099c67c5098345b76fcced040ba .; \
    make

EXPOSE 80
WORKDIR /faustservice
RUN rm -rf makefiles/osx; \
    rm -rf makefiles/dockerosx; \
    mv makefiles/crossosx makefiles/osx; \
    rm -rf makefiles/ros makefiles/unity/Makefile.all makefiles/unity/Makefile.android makefiles/unity/Makefile.ios makefiles/unity/Makefile.osx \
    rm -rf makefiles/esp32/*Flash

CMD ./faustweb --port 80 --sessions-dir /tmp/sessions --recover-cmd /faustservice/faustweb

########################################################################
# HowTo run this docker image
########################################################################
# For local tests:
#-----------------
# docker run -it -p 80:80 eu.gcr.io/faust-cloud-208407/faustservicecloud:latest
#
# For production:
#-----------------
# docker run -d --restart=always -p 80:80 eu.gcr.io/faust-cloud-208407/faustservicecloud:latest
